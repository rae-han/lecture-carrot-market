{
  "parser": "@typescript-eslint/parser",
  // eslint는 기본적으로 퓨어자바스크립트를 이해하기 때문에 확장 문법(typescript, jsx) 같은 경우 그에 상응하는 파싱 과정을 거치고 lint 하도록 함
  "parserOptions": {
    "parserOptions": {
//      "sourceType": "module",
//      "ecmaFeatures": { //
//        "js": true,
//        "ts": true,
//        "jsx": true,
//        "tsx": true
//      },
//      "ecmaVersion": "latest" // 어떤 버전의 es를 사용할 지, 타겟 디바이스에 따라 설정하면 될 것 같다.
    }
  },
  "root": true, // 여러개의 설정 파일을 사용할 때 필요함. 일종의 scope라 생각하면 될듯. monorepo에서 필요해 보임
  "extends": [ // 이미 설정돼 있는 eslint 파일을 가져와서 사용하는 것
    "airbnb",
    "airbnb/hooks",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "eslint-config-prettier",
    "next/core-web-vitals"
  ],
  "globals": {
    "NodeJS": true
  },
  "plugins": ["@typescript-eslint"], // eslint에서 기본적으로 제공되는 규칙 외에 추가 규칙을 사용할수 있도록 넣어주는 것.
  "env": { // javascript가 어떤 환경에서 동작할 지
    "browser": true,
    "node": true,
    "jasmine": true,
    "jest": true
  },
  "settings": { // eslint plugin 추가 설정
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use.
      "version": "detect"
    },
    "import/extensions": [".js", ".jsx", ".ts", ".tsx"],
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {
        "project": "."
      }
    }
  },
  "ignorePatterns": [], // node_modules 폴더나 .로 시작하는(숨긴 파일) 파일 말고도 eslint를 적용 안할 곳을 명시함
  "rules": { // # 위에서 설정한 규칙을 좀 더 세세하게 설정할 수 있도록 하는 공간
    // ### option
    // - 0 === "off"
    // - 1 === "warn",
    // - 2 === "error"
    // ## eslint
    // site: https://eslint.org/docs/latest/rules
    "arrow-body-style": "off", // arrow func 사용 시 return 키워드 및 중괄호 대신 바로 값을 반환하도록 함
    "lines-between-class-members": "off", // 클래스 구성원(필드, 메서드) 사이 빈 줄에 대한 규칙
    "no-param-reassign": ["error", { "props": false }], // 매개변수 재할당
    "no-plusplus": "off", // 단항 연산자(++, --) 사용을 허락하지 않는다.
    "no-restricted-exports": ["error", { "restrictDefaultExports": { "defaultFrom": false } }],
    "no-shadow": "off", // 외부에서 선언된 변수를 덮어 씌우는 변수 선언에 대한 규칙(ex. 함수 안에 item이 있고 그 함수 안에 array 고차 함수를 사용할 때 매개변수 명이 item이면 안됨)
    "no-unused-expressions": ["warn"], // 사용하지 않는 표현식에 대한 규칙
    "no-unused-vars": "off", // 쓰지 않는 변수에 대한 규칙 (끄고 IDE의 기능을 이용해도 될 듯)
    "prefer-destructuring": ["error", { "object": true, "array": false }], // 구조분해 할당을 권하는 규칙
    // ## typescript-eslint
    // site: https://typescript-eslint.io/
    // eslint 옵션 참조
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
    // ## eslint-plugin-react
    // github: https://github.com/jsx-eslint/eslint-plugin-react
    // rules: https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules
    // rules doc: https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules
    "react/button-has-type": "off", // button에 타입을 명시해주는 규칙
    "react/display-name": "off", // 익명 함수 사용 여부
    "react/function-component-definition": ["warn", { "namedComponents": "arrow-function" }], // 함수 컴포넌트를 선언 방법에 대한 규칙
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx", ".ts", ".tsx"] }], // jsx 문법을 허용하는 파일 확장자
    "react/jsx-one-expression-per-line": "off", // 노드 요소 하나를 한 줄에 표현하게 함, 이게 없다면 공백에 {' '}이 생길수 있음.
    "react/jsx-max-depth": ["warn", { "max":  6 }], // jsx 최대 depth 지정.
    "react/jsx-props-no-spreading": "off", // props로 받는 데이터를 바로 props로 넘겨 주는 행위에 대한 규칙
    "react/jsx-wrap-multilines": "off", // jsx를 여러줄 return 할 때 중괄호 생략 여부에 대한 규칙
    "react/prop-types": "off", // propTypes에 대한 규칙 (typescript...)
    "react/react-in-jsx-scope": "off", // jsx 파일 import React from 'react'; 생략 여부에 대한 규칙
    "react/require-default-props": "off", // defaultProps 값 확인 (typescript를 쓴다면 굳이 안써도 될 것 같음)
    "react/self-closing-comp": "off", // 태그 안이 비었을때 자동으로 닫는 태그로 바꿈 (<div></div> => <div />
    // ## eslint-plugin-import
    // github: https://github.com/import-js/eslint-plugin-import/tree/main
    // rules: https://github.com/import-js/eslint-plugin-import/tree/main/docs/rules
    "import/extensions": [ // 확장명 명시에 대한 규칙
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-anonymous-default-export": "off", // export default 할 때 익명 값을 허용해 줄 지에 대한 규칙
    "import/no-extraneous-dependencies": [
      // package.json에 선언되지 않은 외부 모듈의 가져오기에 대한 규칙
      // 테스트나 디자인 시스템을 위해서 허용해줘야하는 부분이 있다.
      "error",
      {
        "devDependencies": ["**/*.test.tsx", "**/*.stories.*", "**/.storybook/**/*.*", "setupTests.ts"],
        "peerDependencies": true
      }
    ],
    "import/no-unresolved": "off", // 절대 경로나 alias 경로 사용에 대한 규칙
    "import/order": [
      // import 순서에 대한 규칙, 주로 경로와 파일명으로 그룹을 짓고 그 그룹간 개행에 대한 규칙
      // 같은 group 끼리는 알파벳 오름차순으로 정렬 됨
      // groups 를 통해 그룹을 지으면 각 그룹간엔 개행이 추가 됨
      "error",
      {
        "pathGroups": [
          {
            "pattern": "@/lib/**",
            "group": "external"
          },
          {
            "pattern": "{types/*,@/types*,./types}",
            "group": "type"
          },
          {
            "pattern": "{hooks,@/hooks/**/*,./hooks/**,./use**,../use**,../../use**,../../../use**,,../../hooks/**,./_hooks/**,../../../_hooks/**}",
            "group": "internal"
          },
          {
            "pattern": "{utils/**/*,./utils,../utils,../../utils,../../../utils}",
            "group": "type"
          },
          {
            "pattern": "{@/constants/*,./constants}",
            "group": "type"
          },
          {
            "pattern": "{states/**/*,./states*,./**/states*,../states*,../../states*,../../../states*,,../../../../states*,**/**/**/states*}",
            "group": "type"
          },
          {
            "pattern": "@/services/**",
            "group": "type"
          },
          {
            "pattern": "{./helpers,./data,./config,./defaults,../../../defaults}",
            "group": "type"
          },
          {
            "pattern": "{components,components/_common/**,@/components,@/components/**,svgs,@/assets/**/*,@/app/**,routes/**,public/**}",
            "group": "index"
          },
          {
            "pattern": "{styles,./*.scss,../*.scss,../*.module.scss}",
            "group": "index"
          }
        ],
        "groups": [
          ["external", "builtin"],
          ["type", "internal", "object"],
          ["parent", "sibling", "index"]
        ],
        "newlines-between": "always"
      }
    ],
    "import/prefer-default-export": "off", // export const 를 사용할 때의 규칙
    // ## eslint-plugin-jsx-a11y
    // github: eslint-plugin-jsx-a11y
    // rules: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/main/docs/rules
    "jsx-a11y/click-events-have-key-events": "off", // onClick 이벤트가 있을 때 수반 되어야 할 이벤트에 대한 규칙, 접근성과 관련돼 있다.
    "jsx-a11y/label-has-associated-control": [ // label 태그가 관련 있는 control과 함께 사용되도록 하는 규칙
      "error",
      {
        "labelComponents": ["label"],
        "labelAttributes": ["htmlFor"],
        "controlComponents": ["input"]
      }
    ]
  },
  "overrides": [ // 일부 파일에서 약간 다른 설정을 해주고 싶을 때 사용.
    {
      "files": ["*.jsx", "*.tsx"],
      "rules": {
      }
    }
  ]
}