// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int       @id @default(autoincrement())
  phone     String?   @unique
  email     String?   @unique
  name      String
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tokens    Token[]
  products  Product[]
  fav       Fav[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) // 실제로 이 데이터가 필드로 들어가지 않는다.
  userId    Int // 이게 들어간다.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favs      Fav[]
}

model Product {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  image       String
  name        String
  price       Int
  description String   @db.MediumText
  Fav         Fav[]
}

model Fav {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Token     Token?   @relation(fields: [tokenId], references: [id])
  tokenId   Int?
}

// model Like {
//   id       Int      @id @default(autoincrement())
//   createAt DateTime @default(now())
//   user     User     @relation(fields: [userId], references: [id])
//   userId   Int      @unique
//   tweet    Tweet    @relation(fields: [tweetId], references: [id])
//   tweetId  Int      @unique
// }
//
// model Tweet {
//   id       Int      @id @default(autoincrement())
//   text     String
//   createAt DateTime @default(now())
//   user     User     @relation(fields: [userId], references: [id])
//   userId   Int      @unique
//   likes    Like[]
// }
//
// model User {
//   id        Int      @id @default(autoincrement())
//   username  String
//   email     String?  @unique
//   password  String
//   createdAt DateTime @default(now())
//   likes     Like[]
//   tweets    Tweet[]
// }
